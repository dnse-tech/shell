name : Branch head Prerelease Images

on:
  push:
    branches:
      - main
      - release/v[0-9]+.0

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

permissions:
  contents: read
  packages: write # Permission to push to GitHub Packages

env:
  PUBLIC_REGISTRY: ghcr.io

jobs:
  prebuild-env:
    name: Prebuild needed Env vars
    runs-on: ubuntu-latest
    steps:
      - name: Check out the repository to the runner
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4
      - name: Set Branch Tag and Other Variables
        id: set-vars
        run: bash ./.github/scripts/branch-tags.sh >> $GITHUB_OUTPUT
    outputs:
      branch_tag: ${{ steps.set-vars.outputs.branch_tag }}
      branch_static_tag: ${{ steps.set-vars.outputs.branch_static_tag }}
      prev_tag: ${{ steps.set-vars.outputs.prev_tag }}

  publish-public:
    permissions:
      contents: read
      packages: write
      # write is needed for:
      # - OIDC for cosign's use in ecm-distro-tools/publish-image.
      id-token: write

    runs-on: ubuntu-latest
    needs:
      - prebuild-env
    steps:
      - name: Check out repository code
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.PUBLIC_REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push all image variations
        uses: rancher/ecm-distro-tools/actions/publish-image@master
        with:
          image: ${{ vars.IMAGE_NAME || 'shell' }}
          tag: ${{ needs.prebuild-env.outputs.branch_static_tag }}
          platforms: "linux/s390x"

          public-registry: ${{ env.PUBLIC_REGISTRY }}
          public-repo: ${{ vars.REPO || github.repository_owner }}
          public-username: ${{ github.actor }}
          public-password: ${{ secrets.GITHUB_TOKEN }}

          push-to-public: true
          push-to-prime: false

      - name: Re-tag the static head image using the rolling tag
        env:
          FULL_IMAGE_URL: ${{ env.PUBLIC_REGISTRY }}/${{ github.repository }}/${{ vars.IMAGE_NAME || 'shell' }}
        run: |
          VERSION="1.2.0"
          curl -LO "https://github.com/oras-project/oras/releases/download/v${VERSION}/oras_${VERSION}_linux_amd64.tar.gz"
          mkdir -p oras-install/
          tar -zxf oras_${VERSION}_*.tar.gz -C oras-install/
          oras-install/oras copy ${{ env.FULL_IMAGE_URL }}:${{ needs.prebuild-env.outputs.branch_static_tag }} ${{ env.FULL_IMAGE_URL }}:${{ needs.prebuild-env.outputs.branch_tag }}
